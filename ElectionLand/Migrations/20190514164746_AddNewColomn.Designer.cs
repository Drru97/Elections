// <auto-generated />
using System;
using ElectionLand.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ElectionLand.Migrations
{
    [DbContext(typeof(AplicationContext))]
    [Migration("20190514164746_AddNewColomn")]
    partial class AddNewColomn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ElectionLand.Models.Appeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CandidateId");

                    b.Property<int>("ElectionId");

                    b.Property<int>("UserId");

                    b.Property<int>("VirtualDistrictId");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ElectionId");

                    b.HasIndex("UserId");

                    b.HasIndex("VirtualDistrictId");

                    b.ToTable("Appeals");
                });

            modelBuilder.Entity("ElectionLand.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ElectionId");

                    b.Property<int>("NumberInTheList");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("UserId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("ElectionLand.Models.ChairmanCC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ElectionId");

                    b.Property<int>("UserId");

                    b.Property<int>("VirtualCantonId");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("UserId");

                    b.HasIndex("VirtualCantonId");

                    b.ToTable("ChairmanCCs");
                });

            modelBuilder.Entity("ElectionLand.Models.CharmanDC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ElectionId");

                    b.Property<int>("UserId");

                    b.Property<int>("VirtualCantonId");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("UserId");

                    b.HasIndex("VirtualCantonId");

                    b.ToTable("CharmanDCs");
                });

            modelBuilder.Entity("ElectionLand.Models.Complaints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ElectionId");

                    b.Property<string>("Text");

                    b.Property<string>("Type");

                    b.Property<int>("VirtualDistrictId");

                    b.Property<int>("WatcherId");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("VirtualDistrictId");

                    b.HasIndex("WatcherId");

                    b.ToTable("Complaintses");
                });

            modelBuilder.Entity("ElectionLand.Models.Election", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChairmanСVK");

                    b.Property<DateTime>("EndElection");

                    b.Property<DateTime>("StartElection");

                    b.Property<string>("Title");

                    b.Property<int?>("UserId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("ElectionLand.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ElectionLand.Models.StatusToUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ElectionId");

                    b.Property<int>("UserId");

                    b.Property<int>("UserStatusId");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserStatusId");

                    b.ToTable("StatusToUsers");
                });

            modelBuilder.Entity("ElectionLand.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<long>("PIN");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ElectionLand.Models.UserStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("UserStatuses");
                });

            modelBuilder.Entity("ElectionLand.Models.UserToRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserToRoles");
                });

            modelBuilder.Entity("ElectionLand.Models.UsetToVirtualDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserId");

                    b.Property<int>("VirtualDistrictId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VirtualDistrictId");

                    b.ToTable("UsetToVirtualDistricts");
                });

            modelBuilder.Entity("ElectionLand.Models.VirtualCanton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<string>("Centre");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("VirtualCantons");
                });

            modelBuilder.Entity("ElectionLand.Models.VirtualDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<string>("Title");

                    b.Property<int>("VirtualCantonId");

                    b.HasKey("Id");

                    b.HasIndex("VirtualCantonId");

                    b.ToTable("VirtualDistricts");
                });

            modelBuilder.Entity("ElectionLand.Models.Voice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CandidatId");

                    b.Property<int?>("CandidateId");

                    b.Property<int>("ElectionId");

                    b.Property<int>("UserId");

                    b.Property<int>("VirtualDistrictId");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ElectionId");

                    b.HasIndex("UserId");

                    b.HasIndex("VirtualDistrictId");

                    b.ToTable("Voices");
                });

            modelBuilder.Entity("ElectionLand.Models.Watcher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CandidateId");

                    b.Property<int>("ElectionId");

                    b.Property<int>("UserId");

                    b.Property<int>("VirtualCantonId");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ElectionId");

                    b.HasIndex("UserId");

                    b.HasIndex("VirtualCantonId");

                    b.ToTable("Watchers");
                });

            modelBuilder.Entity("ElectionLand.Models.Appeal", b =>
                {
                    b.HasOne("ElectionLand.Models.Candidate", "Candidate")
                        .WithMany("Appeals")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.Election", "Election")
                        .WithMany("Appeals")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.User", "User")
                        .WithMany("Appeals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.VirtualDistrict", "VirtualDistrict")
                        .WithMany("Appeals")
                        .HasForeignKey("VirtualDistrictId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.Candidate", b =>
                {
                    b.HasOne("ElectionLand.Models.Election", "Election")
                        .WithMany("Candidates")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.User", "User")
                        .WithMany("Candidates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.ChairmanCC", b =>
                {
                    b.HasOne("ElectionLand.Models.Election", "Election")
                        .WithMany("ChairmanCCs")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.User", "User")
                        .WithMany("ChairmanCCs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.VirtualCanton", "VirtualCanton")
                        .WithMany("ChairmanCCs")
                        .HasForeignKey("VirtualCantonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.CharmanDC", b =>
                {
                    b.HasOne("ElectionLand.Models.Election", "Election")
                        .WithMany("CharmanDCs")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.User", "User")
                        .WithMany("CharmanDCs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.VirtualCanton", "VirtualCanton")
                        .WithMany("CharmanDCs")
                        .HasForeignKey("VirtualCantonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.Complaints", b =>
                {
                    b.HasOne("ElectionLand.Models.Election", "Election")
                        .WithMany("Complaints")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.VirtualDistrict", "VirtualDistrict")
                        .WithMany("Complaints")
                        .HasForeignKey("VirtualDistrictId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.Watcher", "Watcher")
                        .WithMany("Complaints")
                        .HasForeignKey("WatcherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.Election", b =>
                {
                    b.HasOne("ElectionLand.Models.User")
                        .WithMany("Elections")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ElectionLand.Models.StatusToUser", b =>
                {
                    b.HasOne("ElectionLand.Models.Election", "Election")
                        .WithMany("StatusToUsers")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.User", "User")
                        .WithMany("StatusToUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.UserStatus", "UserStatus")
                        .WithMany("StatusToUsers")
                        .HasForeignKey("UserStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.UserToRole", b =>
                {
                    b.HasOne("ElectionLand.Models.Role", "Role")
                        .WithMany("UserToRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.User", "User")
                        .WithMany("UserToRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.UsetToVirtualDistrict", b =>
                {
                    b.HasOne("ElectionLand.Models.User", "User")
                        .WithMany("UsetToVirtualDistricts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.VirtualDistrict", "VirtualDistrict")
                        .WithMany("UsetToVirtualDistricts")
                        .HasForeignKey("VirtualDistrictId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.VirtualDistrict", b =>
                {
                    b.HasOne("ElectionLand.Models.VirtualCanton", "VirtualCanton")
                        .WithMany("VirtualDistricts")
                        .HasForeignKey("VirtualCantonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.Voice", b =>
                {
                    b.HasOne("ElectionLand.Models.Candidate", "Candidate")
                        .WithMany("Voices")
                        .HasForeignKey("CandidateId");

                    b.HasOne("ElectionLand.Models.Election", "Election")
                        .WithMany("Voices")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.User", "User")
                        .WithMany("Voices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.VirtualDistrict", "VirtualDistrict")
                        .WithMany("Voices")
                        .HasForeignKey("VirtualDistrictId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectionLand.Models.Watcher", b =>
                {
                    b.HasOne("ElectionLand.Models.Candidate", "Candidate")
                        .WithMany("Watchers")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.Election", "Election")
                        .WithMany("Watchers")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.User", "User")
                        .WithMany("Watchers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectionLand.Models.VirtualCanton", "VirtualCanton")
                        .WithMany("Watchers")
                        .HasForeignKey("VirtualCantonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
